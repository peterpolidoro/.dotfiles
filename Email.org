#+TITLE: Email Configuration
#+PROPERTY: header-args :mkdirp yes
#+PROPERTY: header-args:emacs-lisp :tangle ./.emacs.d/lisp/pjp-email.el

* Email in Emacs with mu4e

  [[http://www.djcbsoftware.nl/code/mu/mu4e.html][mu4e]] is the best mail
  interface I've ever used because it's fast and makes it really easy to power
  through a huge email backlog. Love the ability to capture links to emails with
  org-mode too.

  Useful mu4e manual pages:

  - [[https://www.djcbsoftware.nl/code/mu/mu4e/MSGV-Keybindings.html#MSGV-Keybindings][Key bindings]]
  - [[https://www.djcbsoftware.nl/code/mu/mu4e/Org_002dmode-links.html#Org_002dmode-links][org-mode integration]]

  #+begin_src emacs-lisp
		(add-to-list 'load-path "~/.guix-profile/share/emacs/site-lisp/mu4e")

		(use-package mu4e
			:defer 20 ; Wait until 20 seconds after startup
			:config

			;; Load org-mode integration
			(require 'org-mu4e)

			;; Refresh mail using isync every 5 minutes
			(setq mu4e-update-interval (* 5 60))
			(setq mu4e-get-mail-command "mbsync -a")
			(setq mu4e-maildir "~/Email")

			;; Make sure that moving a message (like to Trash) causes the
			;; message to get a new file name.  This helps to avoid the
			;; dreaded "UID is N beyond highest assigned" error.
			;; See this link for more info: https://stackoverflow.com/a/43461973
			(setq mu4e-change-filenames-when-moving t)

			;; Set up contexts for email accounts
			(setq mu4e-contexts
						`(,(make-mu4e-context
								:name "Gmail"
								:match-func (lambda (msg) (when msg
																						(string-prefix-p "/Gmail" (mu4e-message-field msg :maildir))))
								:vars '(
												(user-full-name . "Peter Polidoro")
												(user-mail-address . "peterpolidoro@gmail.com")
												(mu4e-drafts-folder . "/Gmail/Drafts")
												(mu4e-sent-folder . "/Gmail/Sent")
												(mu4e-trash-folder . "/Gmail/Trash")
												(mu4e-sent-messages-behavior . sent)
												))
							,(make-mu4e-context
								:name "Janelia"
								:match-func (lambda (msg) (when msg
																						(string-prefix-p "/Janelia" (mu4e-message-field msg :maildir))))
								:vars '(
												(user-full-name . "Peter Polidoro")
												(user-mail-address . "polidorop@janelia.hhmi.org")
												(mu4e-drafts-folder . "/Janelia/Drafts")
												(mu4e-trash-folder . "/Janelia/Trash")
												(mu4e-sent-folder . "/Janelia/Sent")
												))
							))
			(setq mu4e-context-policy 'pick-first)

			;; Prevent mu4e from permanently deleting trashed items
			;; This snippet was taken from the following article:
			;; http://cachestocaches.com/2017/3/complete-guide-email-emacs-using-mu-and-/
			(defun remove-nth-element (nth list)
				(if (zerop nth) (cdr list)
					(let ((last (nthcdr (1- nth) list)))
						(setcdr last (cddr last))
						list)))
			(setq mu4e-marks (remove-nth-element 5 mu4e-marks))
			(add-to-list 'mu4e-marks
									 '(trash
										 :char ("d" . "â–¼")
										 :prompt "dtrash"
										 :dyn-target (lambda (target msg) (mu4e-get-trash-folder msg))
										 :action (lambda (docid msg target)
															 (mu4e~proc-move docid
																							 (mu4e~mark-check-target target) "-N"))))

			;; Display options
			(setq mu4e-view-show-images t)
			(setq mu4e-view-show-addresses 't)

			;; Composing mail
			(setq mu4e-compose-dont-reply-to-self t)

			;; Use mu4e for sending e-mail
			(setq mail-user-agent 'mu4e-user-agent
						message-send-mail-function 'smtpmail-send-it
						smtpmail-smtp-server "smtp.gmail.com"
						smtpmail-smtp-service 465
						smtpmail-stream-type  'ssl)

			;; Signing messages (use mml-secure-sign-pgpmime)
			;; (setq mml-secure-openpgp-signers '("53C41E6E41AAFE55335ACA5E446A2ED4D940BF14"))

			;; (See the documentation for `mu4e-sent-messages-behavior' if you have
			;; additional non-Gmail addresses and want assign them different
			;; behavior.)

			;; setup some handy shortcuts
			;; you can quickly switch to your Inbox -- press ``ji''
			;; then, when you want archive some messages, move them to
			;; the 'All Email' folder by pressing ``ma''.
			(setq mu4e-maildir-shortcuts
						'(("/Gmail/INBOX"       . ?i)
							("/Gmail/Lists/*"     . ?l)
							("/Gmail/Sent Mail"   . ?s)
							("/Gmail/Trash"       . ?t)))

			(add-to-list 'mu4e-bookmarks
									 (make-mu4e-bookmark
										:name "All Inboxes"
										:query "maildir:/Gmail/INBOX OR maildir:/Personal/Inbox"
										:key ?i))

			;; don't keep message buffers around
			(setq message-kill-buffer-on-exit t)

			(setq pjp/mu4e-inbox-query
						"(maildir:/Personal/Inbox OR maildir:/Gmail/Inbox) AND flag:unread")

			(defun pjp/go-to-inbox ()
				(interactive)
				(mu4e-headers-search pjp/mu4e-inbox-query))

			;; Start mu4e in the background so that it syncs mail periodically
			(mu4e t))

  #+end_src

  Use [[https://github.com/iqbalansari/mu4e-alert][mu4e-alert]] to show notifications when e-mail comes in:

  #+begin_src emacs-lisp

		(use-package mu4e-alert
			:after mu4e
			:config
			;; Show unread emails from all inboxes
			(setq mu4e-alert-interesting-mail-query pjp/mu4e-inbox-query)

			;; Show notifications for mails already notified
			(setq mu4e-alert-notify-repeated-mails nil)

			(mu4e-alert-enable-notifications))

  #+end_src

  Provide the =pjp-email= package so that it can be =require='d:

  #+begin_src emacs-lisp

		(provide 'pjp-email)

  #+end_src

* Passwords

	#+BEGIN_SRC sh

		pass insert Email/peterpolidoro@gmail.com
		mkdir -p ~/Email/Gmail
		mbsync -a
		mbsync --list gmail

	#+END_SRC
	
* Email Synchronization

  Configuration docs: https://manpages.debian.org/unstable/isync/mbsync.1.en.html

  #+begin_src conf :tangle .mbsyncrc

		IMAPAccount gmail
		Host imap.gmail.com
		Port 993
		User peterpolidoro@gmail.com
		PassCmd "pass Email/peterpolidoro@gmail.com"
		SSLType IMAPS
		SSLVersions TLSv1.2
		CertificateFile /etc/ssl/certs/ca-certificates.crt
		# Throttle mbsync so we don't go over gmail's quota: OVERQUOTA error would
		# eventually be returned otherwise. For more details see:
		# https://sourceforge.net/p/isync/mailman/message/35458365/
		PipelineDepth 50

		# Define the remote from which mail will be synced
		IMAPStore gmail-remote
		Account gmail

		# Define where mail will be stored
		MaildirStore gmail-local
		SubFolders Verbatim
		Path ~/Email/Gmail/
		Inbox ~/Email/Gmail/Inbox

		# Connect the remote and the local maildir
		#Channel gmail
		#Master :gmail-remote:
		#Slave :gmail-local:
		#Patterns * ![Gmail]* "[Gmail]/All Mail" "[Gmail]/Drafts" "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/Trash"
		#Create Both
		#SyncState *

		Channel sync-gmail-default
		Master :gmail-remote:
		Slave :gmail-local:
		Patterns "INBOX"

		Channel sync-gmail-all
		Master :gmail-remote:"[Gmail]/All Mail"
		Slave :gmail-local:all
		Create Slave

		Channel sync-gmail-drafts
		Master :gmail-remote:"[Gmail]/Drafts"
		Slave :gmail-local:drafts
		Create Slave

		Channel sync-gmail-sent
		Master :gmail-remote:"[Gmail]/Sent Mail"
		Slave :gmail-local:sent
		Create Slave

		Channel sync-gmail-starred
		Master :gmail-remote:"[Gmail]/Starred"
		Slave :gmail-local:starred
		Create Slave

		Channel sync-gmail-trash
		Master :gmail-remote:"[Gmail]/Trash"
		Slave :gmail-local:trash
		Create Slave

		# Get all the channels together into a group.
		Group gmail
		Channel sync-gmail-default
		Channel sync-gmail-all
		Channel sync-gmail-drafts
		Channel sync-gmail-sent
		Channel sync-gmail-starred
		Channel sync-gmail-trash
	#+end_src

* Dependencies

	=emacs-mu4e-alert= pulls in =mu= so we don't need to specify it here also.
	
  #+begin_src scheme :tangle .config/guix/manifests/email.scm

		(specifications->manifest
		 '("isync"
			 "emacs-mu4e-alert"))

  #+end_src

* Sync

	#+BEGIN_SRC sh

		mkdir -p ~/Email/Gmail
		mbsync --list gmail
		mbsync -a

	#+END_SRC
	
